plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'com.scorp.casestudy.furkanyurdakul'
    compileSdk 32

    defaultConfig {
        applicationId "com.scorp.casestudy.furkanyurdakul"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    /*androidExtensions {
        experimental = true
    }*/

    packagingOptions {
        resources.excludes.add("META-INF/*")
        resources.excludes.add('META-INF/DEPENDENCIES')
        resources.excludes.add('META-INF/LICENSE')
        resources.excludes.add('META-INF/LICENSE.txt')
        resources.excludes.add('META-INF/license.txt')
        resources.excludes.add('META-INF/LICENSE.md')
        resources.excludes.add('META-INF/LICENSE-notice.md')
        resources.excludes.add('META-INF/NOTICE')
        resources.excludes.add('META-INF/NOTICE.txt')
        resources.excludes.add('META-INF/notice.txt')
        resources.excludes.add('META-INF/ASL2.0')
        resources.excludes.add("META-INF/*.kotlin_module")
    }

    kapt {
        javacOptions {
            // These options are normally set automatically via the Hilt Gradle plugin, but we
            // set them manually to workaround a bug in the Kotlin 1.5.20
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }

    kotlin.sourceSets.all {
        languageSettings.optIn("kotlin.RequiresOptIn")
    }

    compileOptions {
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.multidex:multidex:$multidex_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // DI
    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_version"
    implementation "androidx.hilt:hilt-work:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_version"

    // Pagination
    implementation "androidx.paging:paging-runtime-ktx:$paging_lib_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}